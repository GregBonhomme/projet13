swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
          
  /user/account:
    get:
      security:
        - Bearer: []
      tags: 
        - User Account Module
      summary: Accounts details
      description: API for fetching a user list of Accounts
      parameters:
        - in: header
          type: "string"
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
            description: User accounts retrieved successfully
            schema: 
                type: array
                items: 
                  type: object
                example: 
                  [{"name":"string",
                  "id":"string",
                  "balance":"float",
                  }]
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/account/{id}{date}:
    get:
      security:
        - Bearer: []
      tags: 
        - User Account Module
      summary: Individual Account Payload
      description: API for fetching an account list of transactions
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          description: Account id
        - in: path
          name: date
          required: true
          type: string
          description: Chronological limit for selecting displayed transactions
        - in: body
          name: body
          description: Account id payload
          required: true
          schema:
            type: string
            example: id:"string"
      produces:
        - application/json
      responses:
        '200':
            description: List of transactions retrieved successfully
            schema: 
                type: array
                items: 
                  type: object
                example: 
                  [{
                  "transactionId":"string",
                  "date":"string",
                  "description":"string",
                  "amount":"float",
                  "balance":"float"
                  }]
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/account/{id}{date}/transaction/{transactionId}:
    get:
      security:
        - Bearer: []
      tags: 
        - User Account Module
      summary: Individual transaction details
      description: API for fetching a specific transaction details
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          description: Account id
        - in: path
          name: date
          required: true
          type: string
          description: Chronological limit for selecting displayed transactions
        - in: path
          name: transactionId
          required: true
          type: integer
          description: Transaction ID
        - in: body
          name: body
          description: Account id payload
          required: true
          schema:
            type: string
            example: id:"string"
      produces:
        - application/json
      responses:
        '200':
            description: List of transactions retrieved successfully
            schema: 
                type: array
                items: 
                  type: object
                example: 
                  [{
                  "type":"string",
                  "category":"string",
                  "notes":"string"
                  }]
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Account Module
      summary: Edit transaction details
      description: API for updating a transaction information
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          description: Account id
        - in: path
          name: date
          required: true
          type: string
          description: Chronological limit for selecting displayed transactions
        - in: path
          name: transactionId
          required: true
          type: integer
          description: Transaction ID
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            type: object
            example: {
                "id": "string",
                "category": "string",
                "notes": "string"
                }
      produces:
        - application/json
      responses:
        '200':
          description: Transaction updated successully
          schema:
            type: object
            example: {
                "status":0,
                "message":"string",
                "body": 
                    {
                      "id": "string",
                      "category": "string",
                      "notes": "string"
                    }
                }
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
          
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
