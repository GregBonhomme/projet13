{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nasync function useToken(token) {\n  _s();\n  const [profile, setProfile] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:3001/api/v1/user/profile\", {\n          method: \"POST\",\n          headers: {\n            \"content-type\": \"application/json; charset=utf-8\",\n            \"Authorization\": \"Bearer \" + token\n          }\n        });\n        const profileData = await response.json();\n        if (profileData.status === 200) {\n          const userData = await profileData.body;\n          console.log(userData);\n          setProfile(userData);\n        } else {\n          return \"Invalid token\";\n        }\n      } catch (error) {\n        console.error(\"An error occured\", error);\n      }\n    };\n    token && fetchData();\n  }, []);\n  console.log(profile);\n  return profile.length > 0 && profile;\n}\n_s(useToken, \"N6YYD9ODp0cfru7rNOcTHSSQ4y4=\");\nexport default useToken;","map":{"version":3,"names":["useState","useEffect","useToken","token","_s","profile","setProfile","fetchData","response","fetch","method","headers","profileData","json","status","userData","body","console","log","error","length"],"sources":["C:/Users/grego/Documents/temp/OpenClassroom/projet13/front/src/utils/useToken/index.js"],"sourcesContent":["import { useState,useEffect } from \"react\"\r\n\r\nasync function useToken (token) {\r\n\r\n    const [profile,setProfile] = useState([])\r\n\r\n    useEffect (() => {\r\n        const fetchData = async() => {\r\n            try {\r\n                const response = await fetch(\"http://localhost:3001/api/v1/user/profile\",{\r\n                    method:\"POST\",\r\n                    headers:{\r\n                        \"content-type\":\"application/json; charset=utf-8\",\r\n                        \"Authorization\":\"Bearer \" + token\r\n                        }\r\n                    })\r\n                const profileData = await response.json()\r\n                \r\n                if (profileData.status === 200) {\r\n                    const userData = await profileData.body\r\n                    console.log(userData)\r\n                    setProfile(userData)\r\n                } else {\r\n                    return \"Invalid token\"\r\n                }\r\n            } catch (error) {\r\n                console.error(\"An error occured\",error)\r\n            }\r\n        }\r\n        token && fetchData()\r\n    },[])\r\n    console.log(profile)\r\n    return (profile.length > 0) && profile\r\n}\r\n\r\nexport default useToken"],"mappings":";AAAA,SAASA,QAAQ,EAACC,SAAS,QAAQ,OAAO;AAE1C,eAAeC,QAAQA,CAAEC,KAAK,EAAE;EAAAC,EAAA;EAE5B,MAAM,CAACC,OAAO,EAACC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEzCC,SAAS,CAAE,MAAM;IACb,MAAMM,SAAS,GAAG,MAAAA,CAAA,KAAW;MACzB,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2C,EAAC;UACrEC,MAAM,EAAC,MAAM;UACbC,OAAO,EAAC;YACJ,cAAc,EAAC,iCAAiC;YAChD,eAAe,EAAC,SAAS,GAAGR;UAC5B;QACJ,CAAC,CAAC;QACN,MAAMS,WAAW,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAEzC,IAAID,WAAW,CAACE,MAAM,KAAK,GAAG,EAAE;UAC5B,MAAMC,QAAQ,GAAG,MAAMH,WAAW,CAACI,IAAI;UACvCC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;UACrBT,UAAU,CAACS,QAAQ,CAAC;QACxB,CAAC,MAAM;UACH,OAAO,eAAe;QAC1B;MACJ,CAAC,CAAC,OAAOI,KAAK,EAAE;QACZF,OAAO,CAACE,KAAK,CAAC,kBAAkB,EAACA,KAAK,CAAC;MAC3C;IACJ,CAAC;IACDhB,KAAK,IAAII,SAAS,CAAC,CAAC;EACxB,CAAC,EAAC,EAAE,CAAC;EACLU,OAAO,CAACC,GAAG,CAACb,OAAO,CAAC;EACpB,OAAQA,OAAO,CAACe,MAAM,GAAG,CAAC,IAAKf,OAAO;AAC1C;AAACD,EAAA,CA/BcF,QAAQ;AAiCvB,eAAeA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}