{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nlet state = {\n  user: {\n    firstname: \"\",\n    lastname: \"\"\n  },\n  connected: false,\n  token: \"\"\n};\nconst reducer = (currentState, action) => {\n  switch (action.type) {\n    case \"setFirstname\":\n      {\n        return {\n          ...currentState,\n          user: {\n            ...currentState.user,\n            firstname: action.payload\n          }\n        };\n      }\n    case \"setLastname\":\n      {\n        return {\n          ...currentState,\n          user: {\n            ...currentState.user,\n            lastname: action.payload\n          }\n        };\n      }\n    case \"toggleConnected\":\n      {\n        return {\n          ...currentState,\n          connected: !currentState.connected\n        };\n      }\n    case \"setToken\":\n      {\n        return {\n          ...currentState,\n          token: action.payload\n        };\n      }\n    default:\n      return currentState;\n  }\n};\nexport const store = configureStore({\n  preloadedState: state,\n  reducer\n});","map":{"version":3,"names":["configureStore","state","user","firstname","lastname","connected","token","reducer","currentState","action","type","payload","store","preloadedState"],"sources":["C:/Users/grego/Documents/temp/OpenClassroom/projet13/front/src/store.js"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nlet state = {\r\n    user : {\r\n        firstname : \"\",\r\n        lastname : \"\"\r\n    },\r\n    connected : false,\r\n    token: \"\",\r\n}\r\n\r\nconst reducer = (currentState, action) => {\r\n    switch (action.type) {\r\n        \r\n        case \"setFirstname\": {\r\n            return {...currentState,user : {...currentState.user , firstname : action.payload}}\r\n        }\r\n\r\n        case \"setLastname\": {\r\n            return {...currentState,user : {...currentState.user , lastname : action.payload}}\r\n        }\r\n\r\n        case \"toggleConnected\": {\r\n            return {... currentState, connected : !currentState.connected}\r\n        }\r\n\r\n        case \"setToken\": {\r\n            return {...currentState, token: action.payload}\r\n        }\r\n    \r\n        default:\r\n            return currentState;\r\n    }\r\n}\r\n\r\nexport const store = configureStore({\r\n    preloadedState: state,\r\n    reducer\r\n})"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AAEjD,IAAIC,KAAK,GAAG;EACRC,IAAI,EAAG;IACHC,SAAS,EAAG,EAAE;IACdC,QAAQ,EAAG;EACf,CAAC;EACDC,SAAS,EAAG,KAAK;EACjBC,KAAK,EAAE;AACX,CAAC;AAED,MAAMC,OAAO,GAAGA,CAACC,YAAY,EAAEC,MAAM,KAAK;EACtC,QAAQA,MAAM,CAACC,IAAI;IAEf,KAAK,cAAc;MAAE;QACjB,OAAO;UAAC,GAAGF,YAAY;UAACN,IAAI,EAAG;YAAC,GAAGM,YAAY,CAACN,IAAI;YAAGC,SAAS,EAAGM,MAAM,CAACE;UAAO;QAAC,CAAC;MACvF;IAEA,KAAK,aAAa;MAAE;QAChB,OAAO;UAAC,GAAGH,YAAY;UAACN,IAAI,EAAG;YAAC,GAAGM,YAAY,CAACN,IAAI;YAAGE,QAAQ,EAAGK,MAAM,CAACE;UAAO;QAAC,CAAC;MACtF;IAEA,KAAK,iBAAiB;MAAE;QACpB,OAAO;UAAC,GAAIH,YAAY;UAAEH,SAAS,EAAG,CAACG,YAAY,CAACH;QAAS,CAAC;MAClE;IAEA,KAAK,UAAU;MAAE;QACb,OAAO;UAAC,GAAGG,YAAY;UAAEF,KAAK,EAAEG,MAAM,CAACE;QAAO,CAAC;MACnD;IAEA;MACI,OAAOH,YAAY;EAC3B;AACJ,CAAC;AAED,OAAO,MAAMI,KAAK,GAAGZ,cAAc,CAAC;EAChCa,cAAc,EAAEZ,KAAK;EACrBM;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}